name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

env:
  PYTHON_VERSION: "3.10"
  NODE_LTS_VERSION: "22.x"

jobs:
  validate:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "${{ env.PYTHON_VERSION }}"
          cache: 'pip'
      - name: Lint YAML
        run: |
          cd modules/validate-schema
          pip install -r requirements.txt
          ./validate.py ../../models.yaml ../models-schema.yaml

  release:
    needs: validate
    runs-on: ubuntu-24.04
    outputs:
      released: ${{ steps.release-please.outputs.release_created }}
      tag: ${{ steps.release-please.outputs.tag_name }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release-please
        with:
          manifest-file: .github/release-please-manifest.json
          config-file: .github/release-please-config.json

  release-node:
    name: Release Node
    needs: release
    if: ${{ needs.release.outputs.released }}
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ./modules/node
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node for Release
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_LTS_VERSION }}
          registry-url: 'https://registry.npmjs.org'

      - name: Build Distributable
        run: |
          make build

      - name: Publish to NPM
        run: |
          if [ "$NODE_AUTH_TOKEN" == "" ]; then
            echo "The 'NPM_TOKEN' secret must be set to deploy to NPM"
            exit 1
          else
            echo "Publishing to NPM..."
            npm publish --access=public
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Publish the module to GitHub packages.
      - name: Publish to GitHub Packages
        run: |
          npm set //npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}
          npm publish --registry https://npm.pkg.github.com

  release-python:
    name: Release Python
    needs: release
    # if: ${{ needs.release.outputs.released }}
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ./modules/python
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python for Release
        uses: actions/setup-python@v5
        with:
          python-version: "${{ env.PYTHON_VERSION }}"
          cache: 'pip'

      - name: Install
        run: make init
          pip install --upgrade pip
          pip install build twine

      - name: Build Python Distribution
        run: make build

      - name: Publish to PyPI
        run: |
          if [ -z "${PYPI_TOKEN}" ]; then
            echo "PYPI_TOKEN is not set. Exiting..."
            exit 1
          fi
          twine upload dist/* -u __token__ -p "${PYPI_TOKEN}"
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}

  attach-assets:
    needs: release
    if: ${{ needs.release.outputs.released }}
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main
      - name: Attach assets to GitHub Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "${{ needs.release.outputs.tag }}" models.yaml --clobber
